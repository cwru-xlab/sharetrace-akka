sharetrace {
  runner {
    type = sharetrace.app.StandardRunner

    iterations = 3
    repeats = 3

    uniform-distribution {
      type = uniform
      lower-bound = 0
      upper-bound = 1
    }

    standard-normal-distribution {
      type = normal
      location = 0
      scale = 1
    }

    right-skew-beta-distribution {
      type = beta
      alpha = 8
      beta = 2
    }

    left-skew-beta-distribution {
      type = beta
      alpha = 2
      beta = 8
    }

    contact-time-factory {
      period = ${sharetrace.parameters.contact-expiry}
      distribution = ${sharetrace.runner.right-skew-beta-distribution}
    }

    score-factory = {
      cached = false
      distribution = ${sharetrace.runner.right-skew-beta-distribution}
      time-factory = {
        period = ${sharetrace.parameters.score-expiry}
        distribution = ${sharetrace.runner.left-skew-beta-distribution}
      }
    }

    network-factory-defaults {
      type = ""
      nodes = 10000
      time-factory = ${sharetrace.runner.contact-time-factory}
      cached = ${cache_network}
    }

    gnm-random-network-factory = ${sharetrace.runner.network-factory-defaults}
    gnm-random-network-factory = {
      type = gnm-random
      edges = ${edges} # [1..inf)
    }

    barabasi-albert-network-factory = ${sharetrace.runner.network-factory-defaults}
    barabasi-albert-network-factory = {
      type = barabasi-albert
      initial-nodes = ${initial_nodes} # [1..inf)
      new-edges = ${new_edges} # [1..initial-nodes)
    }

    # (nodes * degree) must be even
    random-regular-network-factory = ${sharetrace.runner.network-factory-defaults}
    random-regular-network-factory = {
      type = random-regular
      degree = ${degree} # [1..nodes)
    }

    watts-strogatz-network-factory = ${sharetrace.runner.network-factory-defaults}
    watts-strogatz-network-factory = {
      type = watts-strogatz
      nearest-neighbors = ${nearest_neighbors} # [1..nodes - 2 + nodes mod 2); must be even
      rewiring-probability = ${rewiring_probability} # [0, 1]
    }

    scale-free-network-factory = ${sharetrace.runner.network-factory-defaults}
    scale-free-network-factory.type = scale-free

    file-network-factory-defaults = ${sharetrace.runner.network-factory-defaults}
    file-network-factory-defaults = {
      type = file
      path = ""
      delimiter = "\\s+"
    }

    invs13-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    invs13-network-factory.path = "lib/src/main/resources/datasets/InVS13.txt"

    invs15-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    invs15-network-factory.path = "lib/src/main/resources/datasets/InVS15.txt"

    lh10-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    lh10-network-factory.path = "lib/src/main/resources/datasets/LH10.txt"

    lyon-school-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    lyon-school-network-factory.path = "lib/src/main/resources/datasets/LyonSchool.txt"

    sfhh-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    sfhh-network-factory.path = "lib/src/main/resources/datasets/SFHH.txt"

    thiers11-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    thiers11-network-factory.path = "lib/src/main/resources/datasets/Thiers11.txt"

    thiers12-network-factory = ${sharetrace.runner.file-network-factory-defaults}
    thiers12-network-factory.path = "lib/src/main/resources/datasets/Thiers12.txt"

    network-factory = sharetrace.runner.scale-free-network-factory
  }

  parameters.send-coefficient = 0.5

  analysis.handlers = [
    sharetrace.analysis.handler.Runtimes
    sharetrace.analysis.handler.UserEventCounts
    sharetrace.analysis.handler.MessageReachability
  ]
}